<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wesmile.mapper.FileMapper">
  <resultMap id="BaseResultMap" type="com.wesmile.bean.File">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="content_id" jdbcType="INTEGER" property="contentId" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTimes" jdbcType="TIMESTAMP" property="updateTimes" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="versions" jdbcType="BIGINT" property="versions" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, content_id, pic_url, remark, createTime, updateTimes, state, versions, type
  </sql>
  <select id="selectByExample" parameterType="com.wesmile.bean.FileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.pageNum} , #{page.pageSize}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.wesmile.bean.FileExample">
    delete from tb_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wesmile.bean.File">
    insert into tb_file (id, content_id, pic_url, 
      remark, createTime, updateTimes, 
      state, versions, type
      )
    values (#{id,jdbcType=INTEGER}, #{contentId,jdbcType=INTEGER}, #{picUrl,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTimes,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=VARCHAR}, #{versions,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wesmile.bean.File">
    insert into tb_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contentId != null">
        content_id,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTimes != null">
        updateTimes,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="versions != null">
        versions,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTimes != null">
        #{updateTimes,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="versions != null">
        #{versions,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wesmile.bean.FileExample" resultType="java.lang.Long">
    select count(*) from tb_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_file
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contentId != null">
        content_id = #{record.contentId,jdbcType=INTEGER},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTimes != null">
        updateTimes = #{record.updateTimes,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.versions != null">
        versions = #{record.versions,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_file
    set id = #{record.id,jdbcType=INTEGER},
      content_id = #{record.contentId,jdbcType=INTEGER},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTimes = #{record.updateTimes,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR},
      versions = #{record.versions,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into tb_file
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id!=null">
          id,
        </if>
        <if test="item.contentId!=null">
          content_id,
        </if>
        <if test="item.picUrl!=null">
          pic_url,
        </if>
        <if test="item.remark!=null">
          remark,
        </if>
        <if test="item.createTime!=null">
          createTime,
        </if>
        <if test="item.updateTimes!=null">
          updateTimes,
        </if>
        <if test="item.state!=null">
          state,
        </if>
        <if test="item.versions!=null">
          versions,
        </if>
        <if test="item.type!=null">
          type,
        </if>
      </trim>
       values 
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.id!=null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.contentId!=null">
          #{item.contentId,jdbcType=INTEGER},
        </if>
        <if test="item.picUrl!=null">
          #{item.picUrl,jdbcType=VARCHAR},
        </if>
        <if test="item.remark!=null">
          #{item.remark,jdbcType=VARCHAR},
        </if>
        <if test="item.createTime!=null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateTimes!=null">
          #{item.updateTimes,jdbcType=TIMESTAMP},
        </if>
        <if test="item.state!=null">
          #{item.state,jdbcType=VARCHAR},
        </if>
        <if test="item.versions!=null">
          #{item.versions,jdbcType=BIGINT},
        </if>
        <if test="item.type!=null">
          #{item.type,jdbcType=INTEGER},
        </if>
      </trim>
    </foreach>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into tb_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,content_id,
      pic_url,remark,
      createTime,updateTimes,
      state,versions,
      type,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.id,jdbcType=INTEGER},#{item.contentId,jdbcType=INTEGER},
        #{item.picUrl,jdbcType=VARCHAR},#{item.remark,jdbcType=VARCHAR},
        #{item.createTime,jdbcType=TIMESTAMP},#{item.updateTimes,jdbcType=TIMESTAMP},
        #{item.state,jdbcType=VARCHAR},#{item.versions,jdbcType=BIGINT},
        #{item.type,jdbcType=INTEGER},
      </trim>
    </foreach>
  </insert>
</mapper>